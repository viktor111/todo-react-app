{"version":3,"sources":["components/ToDoInput.js","components/Item.js","components/ToDoDisplay.js","components/ToDo.js","components/ThemeChange.js","components/InfoDisplay.js","App.js","reportWebVitals.js","theme.js","index.js"],"names":["ToDoInput","m","class","onSubmit","this","props","onInputHandler","placeholder","value","currentInput","onChange","currentInputHandler","type","colorScheme","_hover","bgGradient","variant","onClick","clearList","React","Component","Item","state","color","line","marked","markDone","setState","hoverTrash","leaveTrash","style","backgroundColor","onclick","item","onMouseLeave","onMouseOver","onDelete","index","xmlns","width","height","fill","viewBox","d","fill-rule","ToDoDisplay","p","pb","borderWidth","borderRadius","overflow","todoList","map","ToDo","todos","currentToDo","inputHandler","event","preventDefault","todoListState","push","target","clearItemList","deleteHandler","list","splice","bgClip","fontSize","fontWeight","ThemeChange","useColorMode","colorMode","toggleColorMode","label","icon","Moon","Sun","isRound","size","InfoDisplay","id","className","rel","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9304b59c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Input, Box, Divider } from \"@chakra-ui/react\";\r\n\r\nclass ToDoInput extends React.Component {\r\n  render() {\r\n    return (\r\n      <Box m=\"10px\">\r\n        <div class=\"form\">\r\n          <form onSubmit={this.props.onInputHandler}>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-12 col-lg-4 col-md-4\">\r\n                <Input\r\n                  placeholder=\"Eat cereal\"\r\n                  value={this.props.currentInput}\r\n                  onChange={this.props.currentInputHandler}\r\n                  type=\"text\"\r\n                  class=\"input\"\r\n                />\r\n              </div>\r\n              <div class=\"col-sm-12 col-lg-1 col-md-4 inputBtn\">\r\n                <Button colorScheme=\"teal\" type=\"submit\">\r\n                  Add\r\n                </Button>\r\n              </div>\r\n              <div class=\"col-sm-12 col-lg-1 col-md-4 inputBtn\">\r\n                <Button\r\n                  _hover={{ bgGradient: \"linear(to-r, red.500, yellow.500)\" }}\r\n                  colorScheme=\"teal\"\r\n                  variant=\"outline\"\r\n                  onClick={this.props.clearList}\r\n                >\r\n                  Clear all\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoInput;\r\n","import React from \"react\";\r\n\r\nclass Item extends React.Component {\r\n  state = { color: \"\", line: \"\", marked:false };\r\n\r\n  markDone = () => {\r\n    const style = this.state.color;\r\n    if (style === \"\") {\r\n      this.setState({ color: \"#319795\t\", line: \"line-through\",marked:true });\r\n    } else {\r\n      this.setState({ color: \"\", line: \"\" });\r\n    }\r\n  };\r\n\r\n  hoverTrash = () => {\r\n    this.setState({ color: \"red\", line: \"line\" });\r\n  };\r\n\r\n  leaveTrash = () => {\r\n    if(this.state.marked === true) return this.setState({ color: \"#319795\t\", line: \"line-through\",marked:true });\r\n    this.setState({ color: \"\", line: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <p class=\"item\">\r\n        <span\r\n          class=\"title\"\r\n          onClick={this.markDone}\r\n          style={{\r\n            backgroundColor: this.state.color,\r\n            \"text-decoration-line\": this.state.line,\r\n          }}\r\n          onclick={this.markDone}\r\n        >\r\n          {this.props.item}\r\n        </span>\r\n        <svg\r\n          onMouseLeave={this.leaveTrash}\r\n          onMouseOver={this.hoverTrash}\r\n          onClick={() => {\r\n            this.props.onDelete(this.props.index);\r\n          }}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          class=\"bi bi-trash trashcan\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n          <path\r\n            fill-rule=\"evenodd\"\r\n            d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n          />\r\n        </svg>\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport Item from \"./Item\";\r\nimport { Divider, Input, Box } from \"@chakra-ui/react\";\r\n\r\nclass ToDoDisplay extends React.Component {\r\n  render() {\r\n    return (\r\n      <span>\r\n        <Box\r\n          p=\"30px\"\r\n          pb=\"60px\"\r\n          m=\"10px\"\r\n          borderWidth=\"1px\"\r\n          borderRadius=\"lg\"\r\n          overflow=\"hidden\"\r\n        >\r\n          {this.props.todoList.map((item, index) => {\r\n            return (\r\n              <>\r\n                <Item\r\n                  index={index}\r\n                  onDelete={this.props.onDelete}\r\n                  key={index}\r\n                  item={item}\r\n                />\r\n                <Divider /> \r\n              </>\r\n            );\r\n          })}\r\n        </Box>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoDisplay;\r\n","import React from \"react\";\r\nimport ToDoInput from \"./ToDoInput\";\r\nimport ToDoDisplay from \"./ToDoDisplay.js\";\r\nimport { Text} from \"@chakra-ui/react\";\r\n\r\nclass ToDo extends React.Component {\r\n  state = { todos: [], currentToDo: \"\" };\r\n\r\n  inputHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    let todoListState = this.state.todos;\r\n    const currentToDo = this.state.currentToDo;\r\n\r\n    if (currentToDo === \"\") return;\r\n\r\n    todoListState.push(currentToDo);\r\n\r\n    this.setState({ todos: todoListState, currentToDo: \"\" });\r\n  };\r\n\r\n  currentInputHandler = (event) => {\r\n    const item = event.target.value;\r\n\r\n    this.setState({ currentToDo: item });\r\n  };\r\n\r\n  clearItemList = () => {\r\n    this.setState({ todos: [] });\r\n  };\r\n\r\n  deleteHandler = (index) => {\r\n    let list = this.state.todos;\r\n\r\n    list.splice(index, 1);\r\n\r\n    this.setState({ todos: list });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Text\r\n          bgGradient=\"linear(to-l, #006666,#2eb8b8)\"\r\n          bgClip=\"text\"\r\n          fontSize=\"6xl\"\r\n          fontWeight=\"extrabold\"\r\n        >\r\n          ТoDo Manager\r\n        </Text>\r\n\r\n        <ToDoInput\r\n          onInputHandler={this.inputHandler}\r\n          currentInputHandler={this.currentInputHandler}\r\n          clearList={this.clearItemList}\r\n          currentInput={this.state.currentToDo}\r\n        />\r\n\r\n        <ToDoDisplay\r\n          todoList={this.state.todos}\r\n          onDelete={this.deleteHandler}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDo;\r\n","import { Button, useColorMode, IconButton, Tooltip } from \"@chakra-ui/react\";\r\nimport { MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\n\r\nfunction ThemeChange() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  return (\r\n    <Tooltip label=\"Change color mode\" fontSize=\"md\">\r\n      <IconButton\r\n        icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\r\n        isRound=\"true\"\r\n        size=\"sm\"\r\n        onClick={toggleColorMode}\r\n      />\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nexport default ThemeChange;\r\n","import React from \"react\";\r\nimport ThemeChange from \"./ThemeChange\";\r\nimport { Tooltip } from \"@chakra-ui/react\";\r\n\r\nclass InfoDisplay extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"picker\">\r\n        <div className=\"row\" id=\"picker2\">\r\n          <div className=\"col-6\">\r\n            <a\r\n              rel=\"noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://github.com/viktor111\"\r\n            >\r\n              <Tooltip label=\"My github account\" fontSize=\"md\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"36\"\r\n                  height=\"36\"\r\n                  fill=\"currentColor\"\r\n                  class=\"bi bi-github\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z\" />\r\n                </svg>\r\n              </Tooltip>\r\n            </a>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <ThemeChange />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoDisplay;","import React from \"react\";\nimport \"./App.css\";\nimport ToDo from \"./components/ToDo\";\nimport InfoDisplay from \"./components/InfoDisplay\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div class=\"App\">\n        <InfoDisplay/>\n        <ToDo />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { extendTheme } from \"@chakra-ui/react\"\r\n\r\nconst config = {\r\n  initialColorMode: \"dark\",\r\n  useSystemColorMode: false,\r\n}\r\n\r\nconst theme = extendTheme({ config })\r\nexport default theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider,ColorModeScript } from \"@chakra-ui/react\"\nimport theme from \"./theme.js\"\n\nReactDOM.render(\n  <ChakraProvider>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n    <App />\n  </ChakraProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}